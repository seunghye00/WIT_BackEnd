<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<!-- 게시물 등록 -->
	<!-- 파라미터타입은 CUD 에서 사용하고 -->
	<!-- 리졸트타입은 R에서만 사용한다! -->
	<!-- 그냥 리졸트만 조회에서만 쓸수있다네 밍쥬야 -->
	<!-- 파라미터타입은 근데 조회에서도 쓸수는 있어 -->
	<insert id="write" parameterType="com.wit.dto.BoardDTO">
		INSERT INTO board (board_seq, emp_no, title, contents, write_date,
		views,board_code)
		VALUES (board_seq.NEXTVAL, #{emp_no}, #{title},
		#{contents},
		sysdate, 0, ${board_code})

		<!-- 시퀀스 값 가져오기 -->
		<selectKey resultType="int" order="AFTER"
			keyProperty="board_seq">
			SELECT board_seq.CURRVAL FROM dual
		</selectKey>
	</insert>

	<!-- 게시물 조회 -->
	<!-- 조인을 통해 작성자 위치에 닉네임을 조회함! -->
	<!-- 그리고 작성날짜가 최신순인게 맨위로 올라온다! -->
	<!-- 조인 너무 어려워 밍쥬야... -->
	<select id="list" resultType="com.wit.dto.BoardReportDTO">
		select a.*
		from
		(SELECT
		row_number() over(
		<choose>
			<when test="sortTarget == 'board_seq'">
				order by b.write_date desc
			</when>
			<when test="sortTarget == 'views'">
				<if test="adminReport=='true'">
					order by r.count desc
				</if>
				<if test="adminReport=='false'">
					order by b.views desc
				</if>
			</when>
			<otherwise>
				order by b.board_seq desc
			</otherwise>
		</choose>
		) as rown,
		b.board_seq, b.title,
		b.contents, b.write_date,
		b.views,b.board_code, e.nickname AS emp_no
		<if test="report=='true'">
			,r.report_type,r.report_date
		</if>
		<if test="adminReport=='true'">
			,r.count
		</if>

		FROM
		board b
		JOIN employee e ON b.emp_no = e.emp_no
		<if test="report=='true'">
			join report r on b.board_seq=r.board_seq
			and r.emp_no =
			#{emp_no}
		</if>
		<if test="adminReport=='true'">
			join (select board_seq,count(*) as count from report group
			by board_seq) r
			on b.board_seq=r.board_seq
		</if>

		where b.board_code=${board_code}
		<if test="searchTarget == 'title'">
			and b.title like '%'||#{searchTxt}||'%'
		</if>
		<if test="searchTarget == 'contents'">
			and REGEXP_REPLACE( b.contents, '&lt;[^>]+&gt;','') like
			'%'||#{searchTxt}||'%'
		</if>
		<if test="bookmark=='true'">
			and b.board_seq in (select board_seq from book_mark where
			emp_no=#{emp_no})
		</if>
		<if test="report=='true'">
			and b.board_seq in (select board_seq from report where
			emp_no=#{emp_no})
		</if>
		) a
		where rown between ${start} and ${end}

	</select>

	<!-- 게시글 개수 -->
	<select id="boardCount" resultType="int">
		select count(*) from board
		<if test="adminReport=='true'">
			b join (select board_seq,count(*) as count from report group by
			board_seq) r
			on b.board_seq=r.board_seq
		</if>
		where board_code=${board_code}
		<if test="searchTarget == 'title'">
			and title like '%'||#{searchTxt}||'%'
		</if>
		<if test="searchTarget == 'contents'">
			and REGEXP_REPLACE( contents, '&lt;[^>]+&gt;','') like
			'%'||#{searchTxt}||'%'
		</if>
		<if test="bookmark=='true'">
			and board_seq in (select board_seq from book_mark where
			emp_no=#{emp_no})
		</if>
		<if test="report=='true'">
			and board_seq in (select board_seq from report where
			emp_no=#{emp_no})
		</if>
	</select>

	<!-- 게시물 상세 조회 -->
	<select id="detailBoard" parameterType="int"
		resultType="com.wit.dto.BoardDTO">
		SELECT b.board_seq, b.title, b.contents, b.write_date,
		b.views, e.nickname
		AS emp_no
		FROM board b
		JOIN employee e ON b.emp_no =
		e.emp_no
		WHERE b.board_seq = ${board_seq}
	</select>

	<!-- 조회수 -->
	<update id="viewcount">
		UPDATE board SET views = views + 1 WHERE board_seq =
		${board_seq}
	</update>

	<!-- 자유게시판 jstl 을 위한 닉네임 조회 -->
	<!-- emp_no 를 문자열로 전달 해야해서서 파라미터타입 사용 -->
	<!-- 쿼리의 결과로 반환되는 데이터는 문자열 타입, 단일 닉네임 값을 반환하며 String으로 매핑! -->
	<select id="selectNickname" parameterType="String"
		resultType="String">
		SELECT nickname
		FROM employee
		WHERE emp_no =
		#{emp_no,jdbcType=VARCHAR}
	</select>

	<!-- 게시물 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM board WHERE
		board_seq = ${board_seq}
	</delete>

	<!-- 직원 정보 조회 -->
	<!-- 조인을해서 깔끔하게 백밍쥬 사장 이렇게 하기위해서 추가했어 -->
	<!-- 이건 공통코드로 쓰일거야 헤더 우측 프로필 옆에 뽑아야하니깐! -->
	<select id="employeeInfo" resultType="com.wit.dto.EmployeeDTO">
		SELECT e.name, r.role_title
		as role_code,
		e.photo AS PHOTO
		FROM Employee e
		JOIN Role r ON e.role_code = r.role_code
		WHERE
		e.emp_no = #{emp_no}
	</select>

	<!-- 게시물 수정 -->
	<update id="update">
		update board set title=#{title} ,
		contents=#{contents}, write_date=sysdate where board_seq=${board_seq}
	</update>

	<!-- 신고 내역 리스트 -->
	<select id="reportList" resultType="map">
		select
		r.board_seq, r.report_type, r.report_date, em.name as emp_no
		from board b
		join report r on b.board_seq = r.board_seq
		join employee em on r.emp_no = em.emp_no
		where r.board_seq = ${board_seq}
	</select>
</mapper>
